<!DOCTYPE html>
<html>
  <head>
    <script>
      // Support for having this be an embedded widget of some sort
      function calculatorRoot() {
        return document.body;
      }

      var initialChildInfoChildElementCount; // initialized onload.
      function childEntryCount(childInfo) {
        // Subtract 1, because we have the <legend> in there.
        /* compat issue: old browsers don't have .childElementCount */
        return childInfo.childElementCount - initialChildInfoChildElementCount;
      }

      function ensureChildInfoCount(numChildren) {
        var childInfo = calculatorRoot().querySelector("#childInfo");
        while (childEntryCount(childInfo) > numChildren) {
          /* compat issue: old browsers don't have remove(). */
          childInfo.lastChild.remove();
        }
        var childTemplate = calculatorRoot().querySelector("#oneChild").content;
        while (childEntryCount(childInfo) < numChildren) {
          childNumber = childEntryCount(childInfo) + 1;
          var child = childTemplate.cloneNode(true);
          child.querySelector(".childNumber").textContent = childNumber;
          child.querySelector(".currentYear").textContent = (new Date).getFullYear();
          /* compat issue: old browsers don't have for-of loops. */
          for (node of child.querySelectorAll("input[name]")) {
            node.name += childNumber;
          }
          childInfo.appendChild(child);
        }
      }

      function restoreInputs(names, params) {
        /* compat issue: old browsers don't support for-of loops. */
        for (var inputName of names) {
          /* compat issue: old browsers don't support `` strings. */
          calculatorRoot().querySelector(`input[name=${inputName}]`).value =
            params.get(inputName);
        }
      }
      function restoreStateFromLocation() {
        /* compat issue: old browsers don't have URLSearchParams */
        var params = new URLSearchParams(location.search.substring(1));
        numChildren = params.get("childcount");
        calculatorRoot().querySelector("input[name=childcount]").value = numChildren;
        numChildren = parseInt(numChildren);
        ensureChildInfoCount(numChildren);
        for (child = 1; child <= numChildren; ++child) {
          /* compat issue: old browsers don't support `` strings. */
          restoreInputs([`matriculation-${child}`, `years-${child}`,
                         `collegecost-${child}`],
                        params);
        }

        restoreInputs(["tuition-inflation"], params);
      }

      window.onload = function() {
        /* compat issue: old browsers don't have .childElementCount */
        initialChildInfoChildElementCount =
          calculatorRoot().querySelector("#childInfo").childElementCount;
        if (!location.search) {
          // Nothing to initialize with.
          return
        }

        restoreStateFromLocation();
        calculate();
      }

      function calculateCosts() {
        var childInfo = calculatorRoot().querySelector("#childInfo");
        var matriculationYearInputs =
          childInfo.querySelectorAll('input[name^="matriculation-"]');
        var yearsInCollegeInputs =
          childInfo.querySelectorAll('input[name^="years-"]');
        var costInputs =
          childInfo.querySelectorAll('input[name^="collegecost-"]');
        var matriculationYears = [];
        var completionYears = [];
        var attendanceData = [];
        for (var i = 0; i < matriculationYearInputs.length; ++i) {
          /* compat issue: old browsers don't support .valueAsNumber; need to
             parseInt(foo.value or something. */
          matriculationYears.push(matriculationYearInputs[i].valueAsNumber);
          completionYears.push(matriculationYearInputs[i].valueAsNumber +
                               yearsInCollegeInputs[i].valueAsNumber);
          attendanceData.push( { start: matriculationYears[i],
                                 end: completionYears[i],
                                 cost: costInputs[i].valueAsNumber } );
        }

        var thisYear = (new Date).getFullYear();
        var startYear = Math.max(thisYear,
                                 Math.min.apply(null, matriculationYears));
        var endYear = Math.max(thisYear, Math.max.apply(null, completionYears));

        var yearlyTuitionMultiplier =
          1 + calculatorRoot().querySelector("input[name=tuition-inflation]").valueAsNumber / 100;
        var tuitions = calculatorRoot().querySelector("#tuitions");
        var attendanceYears = calculatorRoot().querySelector("#attendance-years");
        var totalCost = 0;
        /* co
        var formatter = new Intl.NumberFormat();
        for (var year = startYear; year < endYear; ++year) {
          attendanceYears.appendChild(document.createElement("td"))
                         .textContent = year;
          var yearCost = attendanceData.reduce(function(cur, data) {
            if (year >= data.start && year < data.end) {
              cur += Math.round(data.cost *
                                Math.pow(yearlyTuitionMultiplier, year - thisYear));
            }
            return cur;
          }, 0);
          totalCost += yearCost;
          tuitions.appendChild(document.createElement("td"))
                  .textContent =
        }
        attendanceYears.appendChild(document.createElement("th"))
                       .textContent = "Total";
      }

      function calculate() {
        calculateCosts();
      }
    </script>
    <style>
      .oneChild > label { display: block }
    </style>
  </head>
  <body>
    <!-- compat issue: old browsers don't have <template> elements -->
    <template id="oneChild">
      <fieldset class="oneChild">
        <legend>Child <span class="childNumber"></span></legend>
        <label>
          Year child will start college:
          <input required name="matriculation-" type="number">
        </label> 
        <label>
          Years in college:
          <input required name="years-" type="number" min="1">
        </label>
        <label>
          Annual cost of desired college type in <span class="currentYear"></span>:
          $<input required name="collegecost-" type="number">
        </label>
      </fieldset>
    </template>
    <form action="">
      <fieldset id="childInfo">
        <legend>
          <label>
            Number of children:
            <!-- compat issue: old browsers don't support .valueAsNumber; need
                 to parseInt(foo.value or something. -->
            <input required type="number" name="childcount"
                   onchange="ensureChildInfoCount(this.valueAsNumber)">
          </label>
        </legend>
      </fieldset>
      <fieldset id="costs">
        <legend>Costs</legend>
        Annual inflation-adjusted tuition increase:
        <input type="number" required step="0.1" value="6"
               name="tuition-inflation">%.
        <table id="tuition-table" border>
          <tr id="attendance-years">
            <th>Year</th>
          </tr>
          <tr id="tuitions">
            <th>Cost of attendance</th>
          </tr>
        </table>
      </fieldset>
      <input type="submit" value="Calculate">
    </form>
  </body>
</html>
